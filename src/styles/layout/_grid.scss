@use "src/styles/abstracts/constants" as *;
@use "src/styles/abstracts/mixins" as *;

.content {
  position: relative;
  width: 100%;
  max-width: $max-width;
  @include clearfix;
  @include mh-center;
  @include ph-default;

  @media (min-width: $breakpoint-md) {
    width: 80%;
  }
}

.row {
  margin-left: calc(-1 * #{$spacing});
  margin-right: calc(-1 * #{$spacing});
  @include clearfix;
}

.grid {
  display: grid;
  margin-left: calc(-1 * #{$spacing});
  margin-right: calc(-1 * #{$spacing});
  grid-row-gap: calc(2 * #{$spacing});;

  @include small {
    @include m-0;
  }

  @for $i from 1 through $grid-size {
    $repeat: $grid-size / $i;

    &[sm='#{$i}'] {
      grid-template-columns: repeat(#{$repeat}, 1fr);
    }

    @include medium {
      &[md='#{$i}'] {
        grid-template-columns: repeat(#{$repeat}, 1fr);
      }
    }

    @include large {
      &[lg='#{$i}'] {
        grid-template-columns: repeat(#{$repeat}, 1fr);
      }
    }
  }
}

.column {
  float: left;
  position: relative;
  @include ph-default;

  @for $i from 1 through $grid-size {
  &[sm='#{$i}'] {
      width: calc(100% / #{$grid-size} * #{$i});
    }

    &[offset='#{$i}'] {
      margin-left: calc(100% / #{$grid-size} * #{$i});
    }

    @include medium {
      &[md='#{$i}'] {
        width: calc(100% / #{$grid-size} * #{$i});
      }

      &[offset-md='#{$i}'] {
        margin-left: calc(100% / #{$grid-size} * #{$i});
      }
    }

    @include large {
      &[lg='#{$i}'] {
        width: calc(100% / #{$grid-size} * #{$i});
      }

      &[offset-lg='#{$i}'] {
        margin-left: calc(100% / #{$grid-size} * #{$i});
      }
    }
  }
}



